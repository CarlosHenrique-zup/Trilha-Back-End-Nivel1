package br.com.zup.estrelas.cliente.service.impl;

import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.zup.estrelas.cliente.dto.ClienteDTO;
import br.com.zup.estrelas.cliente.dto.MensagemDTO;
import br.com.zup.estrelas.cliente.entity.ClienteEntity;
import br.com.zup.estrelas.cliente.repository.ClienteRepository;
import br.com.zup.estrelas.cliente.service.ClienteService;

@Service
public class ClienteServiceImpl implements ClienteService {

	private static final String CLIENTE_ADICIONADO_COM_SUCESSO = "Cliente cadastrado com sucesso!";
	private static final String CLIENTE_REMOVIDO_COM_SUCESSO = "Cliente removido com sucesso!";
	private static final String CLIENTE_INEXISTENTE = "Cliente inexistente!";
	private static final String CLIENTE_JA_EXISTENTE = "Cliente j√° existe!";
	private static final String CLIENTE_ALTERADO_COM_SUCESSO = "Cliente alterado com sucesso!";

	@Autowired
	ClienteRepository clienteRepository;

	@Override
	public MensagemDTO adicionarCliente(ClienteDTO clienteDTO) {
		ClienteEntity cliente = new ClienteEntity();

		if (clienteRepository.existsByCpf(cliente.getCpf())) {
			return new MensagemDTO(CLIENTE_JA_EXISTENTE);
		}

		BeanUtils.copyProperties(clienteDTO, cliente);
		clienteRepository.save(cliente);

		return new MensagemDTO(CLIENTE_ADICIONADO_COM_SUCESSO);
	}

	@Override
	public List<ClienteEntity> listarCliente() {
		return (List<ClienteEntity>) clienteRepository.findAll();
	}

	@Override
	public MensagemDTO atualizarCliente(Long idCliente, ClienteDTO clienteDTO) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public MensagemDTO removerCliente(Long idCliente) {
		if(clienteRepository.existsById(idCliente)){
			clienteRepository.deleteByCpf(idCliente);
		}
		
		return new MensagemDTO();
	}

}
